service: todo
frameworkVersion: "=1.35.1"

provider:
  name: aws
  runtime: nodejs6.10
  profile: tromesh # AWS CLI profile name
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource:
        - "arn:aws:dynamodb:*:*"
  environment: 
    APP_SECRET: ${file(./config.yml):${self:custom.stage}.APP_SECRET}
    DB_PREFIX: ${file(./config.yml):${self:custom.stage}.DB_PREFIX}

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  stage: ${opt:stage, self:provider.stage}
  DB_PREFIX: ${file(./config.yml):${self:custom.stage}.DB_PREFIX}
  dynamodb:  
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      domain:
        sources:
          - table: ${self:custom.DB_PREFIX}-todos
            sources: [./offline/migrations/todo-seed.json]

functions:
  getAllTodos:
    handler: handler.getAllTodos
    events:
      - http:
          method: GET
          path: todos/getAll
          cors: true

  createTodo:
    handler: handler.createTodo
    events:
      - http:
          method: POST
          path: todos
          cors: true

  updateTodo:
    handler: handler.updateTodo
    events:
      - http:
          method: PUT
          path: todos/update
          cors: true

  updateTodoStatus:
    handler: handler.updateTodoStatus
    events:
      - http:
          method: PUT
          path: todos/status
          cors: true
  
  deleteTodo:
    handler: handler.deleteTodo
    events:
      - http:
          method: DELETE
          path: todos/delete/{id}
          cors: true

resources:
  Resources: ${file(offline/migrations/todo.yml)}

package:
  exclude:
    - node_modules/dynamodb-localhost/**
    - node_modules/serverless-dynamodb-local/**
    - node_modules/serverless-offline/**

